from flask import Flask, request, jsonify, session
from flask_cors import CORS
import json
import os
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = 'your_secret_key'
CORS(app)

CLIENTS_FILE = "clients.json"
RESULTS_FILE = "results.json"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
def load_clients():
    if not os.path.exists(CLIENTS_FILE):
        save_clients([])
    with open(CLIENTS_FILE, "r", encoding="utf-8") as file:
        return json.load(file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
def save_clients(clients):
    with open(CLIENTS_FILE, "w", encoding="utf-8") as file:
        json.dump(clients, file, indent=4, ensure_ascii=False)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–µ—Å—Ç—É
def load_results():
    if not os.path.exists(RESULTS_FILE):
        save_results([])
    with open(RESULTS_FILE, "r", encoding="utf-8") as file:
        return json.load(file)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–µ—Å—Ç—É
def save_results(results):
    with open(RESULTS_FILE, "w", encoding="utf-8") as file:
        json.dump(results, file, indent=4, ensure_ascii=False)

# üü¢ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞
@app.route('/register', methods=['POST'])
def register():
    data = request.json
    clients = load_clients()

    if any(client['email'] == data['email'] for client in clients):
        return jsonify({"error": "–¶–µ–π email –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π"}), 400

    hashed_password = generate_password_hash(data['password'])

    new_client = {
        "id": len(clients) + 1,
        "name": data['name'],
        "email": data['email'],
        "password": hashed_password,
        "phone": data['phone'],
        "dob": data['dob'],
        "gender": data['gender'],
        "country": data['country'],
        "agreement": data['agreement']
    }

    clients.append(new_client)
    save_clients(clients)

    return jsonify({"message": "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!"}), 201

# üü¢ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
@app.route('/clients', methods=['GET'])
def get_clients():
    return jsonify(load_clients())

# üü¢ –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
@app.route('/delete_client/<int:index>', methods=['DELETE'])
def delete_client(index):
    clients = load_clients()
    
    if 0 <= index < len(clients):
        clients.pop(index)
        save_clients(clients)
        return jsonify({"message": "–ö–ª—ñ—î–Ω—Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–æ"}), 200
    
    return jsonify({"error": "–ö–ª—ñ—î–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"}), 404

# üü¢ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
@app.route('/update_client/<int:index>', methods=['PUT'])
def update_client(index):
    data = request.json
    clients = load_clients()
    
    if 0 <= index < len(clients):
        clients[index]["name"] = data.get("name", clients[index]["name"])
        save_clients(clients)
        return jsonify({"message": "–î–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ"}), 200
    
    return jsonify({"error": "–ö–ª—ñ—î–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π"}), 404

# üü¢ –í—Ö—ñ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
@app.route('/login', methods=['POST'])
def login():
    data = request.json
    clients = load_clients()

    for client in clients:
        if client['email'] == data['email'] and check_password_hash(client['password'], data['password']):
            session['username'] = client['name']
            return jsonify({"message": "–í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π"}), 200

    return jsonify({"error": "–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –≤—Ö–æ–¥—É"}), 401

# üü¢ –í–∏—Ö—ñ–¥ —ñ–∑ —Å–∏—Å—Ç–µ–º–∏
@app.route('/logout', methods=['POST'])
def logout():
    session.pop('username', None)
    return jsonify({"message": "–í–∏—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π"}), 200

# üü¢ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–µ—Å—Ç—É
@app.route('/save_results', methods=['POST'])
def save_test_results():
    data = request.json
    results = load_results()
    results.append(data)
    save_results(results)
    return jsonify({"message": "–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!"}), 201

if __name__ == '__main__':
    app.run(debug=True)